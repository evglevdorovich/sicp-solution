#lang racket

(define (make-from-real-imag x y)
    (define (dispatch op)
    (cond ((eq? op 'real-part) x)
    ((eq? op 'imag-part) y)
    ((eq? op 'magnitude) (sqrt (+ (square x) (square y))))
    ((eq? op 'angle) (atan y x))
    (else (error "Unknown op: MAKE-FROM-REAL-IMAG" op))))
dispatch)

(define (install-polar-package)
;; internal procedures
(define (magnitude z) (car z))
(define (angle z) (cdr z))
(define (make-from-mag-ang r a) (cons r a))
(define (real-part z) (* (magnitude z) (cos (angle z))))
(define (imag-part z) (* (magnitude z) (sin (angle z))))
(define (make-from-real-imag x y)
(cons (sqrt (+ (square x) (square y)))
(atan y x))))

(define (make-from-mag-ang m a)
    (define (dispatch op)
    (cond ((eq? op 'real-part) (* m (cos a)))
    ((eq? op 'imag-part) (* m (sin a)))
    ((eq? op 'magnitude) m)
    ((eq? op 'angle) a)
    (else (error "Unknown op: MAKE-FROM-MAG-ANG" op))))
dispatch)
